{"ast":null,"code":"var _jsxFileName = \"/Users/karenhernandez/Desktop/WRSP-AD/tec_food_web/src/views/Dashboard/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Done from \"@material-ui/icons/Done\";\nimport Block from \"@material-ui/icons/Block\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\nimport CardIcon from \"../../components/Card/CardIcon.js\";\nimport CardFooter from \"../../components/Card/CardFooter.js\";\nimport \"./Dashboard-style.css\";\nimport styles from \"../../assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { AirportShuttleTwoTone } from \"@material-ui/icons\";\nimport ManageDeliveryService from \"../../service/ManageDeliveryService\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from \"@material-ui/core/Button\";\nimport { Icon } from \"@material-ui/core\";\n\nclass DashboardPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = event => {\n      const {\n        value,\n        open\n      } = event.target;\n      this.setState({ ...this.state,\n        open: false\n      });\n      console.log(this.state);\n      console.log(this.state.orders);\n    };\n\n    this.state = {\n      open: false,\n      orders: [],\n      order: {\n        _id: '',\n        customerName: '',\n        restaurantId: '',\n        customerId: '',\n        orderDescription: '',\n        orderNumber: '',\n        orderStatus: ''\n      },\n      test: ''\n    };\n    this.useStyles = this.useStyles.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.setOrderAsMissed = this.setOrderAsMissed.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshCourses();\n  }\n\n  handleClickOpen(order) {\n    this.setState(prevState => ({\n      open: !prevState.open,\n      order: {\n        _id: order._id,\n        customerName: order.customerName,\n        restaurantId: order.restaurantId,\n        customerId: order.customerId,\n        orderDescription: order.orderDescription,\n        orderNumber: order.orderNumber,\n        orderStatus: order.orderStatus\n      }\n    }));\n    console.log(order);\n    console.log(this.state.order._id);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(this.state.order.customerName);\n    console.log(this.state.order.restaurantId);\n    console.log(this.state.order.orderDescription);\n    console.log(this.state.order._id + \"G: \" + this.state.test);\n  }\n\n  refreshCourses() {\n    ManageDeliveryService.retrieveAllOrders().then(response => {\n      console.log(response);\n      this.setState({\n        orders: response.data\n      });\n    });\n  }\n\n  setOrderAsMissed(id) {\n    ManageDeliveryService.setOrderAsMissed(id).then(response => {\n      console.log(\"MISSED\" + id);\n      console.log(response.data);\n      this.refreshCourses();\n    });\n    this.setState({ ...this.state,\n      open: false\n    });\n    console.log(\"OPEN: \" + this.state.open);\n    console.log(this.state.orders);\n  }\n\n  setOrderAsDelivered(id) {\n    ManageDeliveryService.setOrderAsDelivered(id).then(response => {\n      console.log(\"DELIVERED\" + id);\n      this.refreshCourses();\n    });\n    this.setState({ ...this.state,\n      open: false\n    });\n    console.log(\"OPEN: \" + this.state.open);\n    console.log(this.state.orders);\n  }\n\n  useStyles() {\n    makeStyles(styles);\n  }\n\n  render() {\n    const classes = this.useStyles();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GridContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, this.state.orders.map(order => /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 6,\n      md: 3,\n      key: order._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      onClick: () => this.handleClickOpen(order),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: order.orderStatus === \"Ready\" ? \"warning\" : order.orderStatus === \"Delivered\" ? \"success\" : order.orderStatus === \"Pending\" ? \"info\" : \"warning\",\n      stats: true,\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CardIcon, {\n      color: order.orderStatus === \"Ready\" ? \"warning\" : order.orderStatus === \"Delivered\" ? \"success\" : order.orderStatus === \"Pending\" ? \"info\" : order.orderStatus === \"Missed\" ? \"danger\" : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 45\n      }\n    }, order.orderStatus === \"Ready\" ? /*#__PURE__*/React.createElement(AirportShuttleTwoTone, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 85\n      }\n    }) : order.orderStatus === \"Delivered\" ? /*#__PURE__*/React.createElement(Done, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 93\n      }\n    }) : order.orderStatus === \"Pending\" ? /*#__PURE__*/React.createElement(AccessTime, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 95\n      }\n    }) : order.orderStatus === \"Missed\" ? /*#__PURE__*/React.createElement(Block, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 98\n      }\n    }) : null), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"cardCategory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 45\n      }\n    }, order.orderDescription), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"cardTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 45\n      }\n    }, order.customerName)), /*#__PURE__*/React.createElement(CardFooter, {\n      stats: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 45\n      }\n    }, order.orderStatus === \"Ready\" ? /*#__PURE__*/React.createElement(AirportShuttleTwoTone, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 85\n      }\n    }) : order.orderStatus === \"Delivered\" ? /*#__PURE__*/React.createElement(Done, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 93\n      }\n    }) : order.orderStatus === \"Pending\" ? /*#__PURE__*/React.createElement(AccessTime, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 95\n      }\n    }) : /*#__PURE__*/React.createElement(Block, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 111\n      }\n    }), order.orderStatus))))), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": this.state.order._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, this.state.order.customerName), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 33\n      }\n    }, \"ORDER ID: \"), \" \", this.state.order._id, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }, \"Order Number: \"), this.state.order.orderNumber, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }\n    }, \"Description: \"), \" \", this.state.order.orderDescription, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }, \"Restaurante Id: \"), this.state.order.restaurantId, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }, \"Order Status: \"), this.state.order.orderStatus, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 38\n      }\n    }), \"LATER ON WE CAN PUT MORE INFO ABOUT PAYMENT, TRANSACTION, ETC\")), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.setOrderAsMissed(this.state.order._id);\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, \"Missed\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.setOrderAsDelivered(this.state.order._id);\n      },\n      color: \"primary\",\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }, \"Delivered\")))));\n  }\n\n}\n\nexport default DashboardPage; //\n//\n// <Dialog\n// open={this.state.open}\n// onClose={this.handleClose}\n// aria-labelledby=\"id\"\n// aria-describedby=\"alert-dialog-description\"\n//     >\n//     {\n//         this.state.orders.map( order => (\n//             <DialogTitle\n//                 id = \"id\"\n//\n//             >\n//                 {order.customerName}\n//             </DialogTitle>\n//         ))\n//     }\n// <DialogContent>\n//     <DialogContentText id=\"alert-dialog-description\">\n//         Let Google  even when no apps are running.\n//     </DialogContentText>\n// </DialogContent>\n// <DialogActions>\n//     <Button onClick={this.handleClose} color=\"primary\">\n//         Disagree\n//     </Button>\n//     <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n//         Agree\n//     </Button>\n// </DialogActions>\n// </Dialog>\n//\n//\n//\n// export default function AlertDialog() {\n//     const [open, setOpen] = React.useState(false);\n//\n//     const handleClickOpen = () => {\n//         setOpen(true);\n//     };\n//\n//     const handleClose = () => {\n//         setOpen(false);\n//     };\n//\n//     return (\n//         <div>\n//             <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n//                 Open alert dialog\n//             </Button>\n//             <Dialog\n//                 open={open}\n//                 onClose={handleClose}\n//                 aria-labelledby=\"alert-dialog-title\"\n//                 aria-describedby=\"alert-dialog-description\"\n//             >\n//                 <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n//                 <DialogContent>\n//                     <DialogContentText id=\"alert-dialog-description\">\n//                         Let Google  even when no apps are running.\n//                     </DialogContentText>\n//                 </DialogContent>\n//                 <DialogActions>\n//                     <Button onClick={handleClose} color=\"primary\">\n//                         Disagree\n//                     </Button>\n//                     <Button onClick={handleClose} color=\"primary\" autoFocus>\n//                         Agree\n//                     </Button>\n//                 </DialogActions>\n//             </Dialog>\n//         </div>\n//     );\n// }","map":{"version":3,"sources":["/Users/karenhernandez/Desktop/WRSP-AD/tec_food_web/src/views/Dashboard/Dashboard.js"],"names":["React","Component","makeStyles","Done","Block","AccessTime","GridItem","GridContainer","Card","CardHeader","CardIcon","CardFooter","styles","AirportShuttleTwoTone","ManageDeliveryService","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Icon","DashboardPage","constructor","props","handleClose","event","value","open","target","setState","state","console","log","orders","order","_id","customerName","restaurantId","customerId","orderDescription","orderNumber","orderStatus","test","useStyles","bind","handleClickOpen","setOrderAsMissed","componentDidMount","refreshCourses","prevState","componentDidUpdate","prevProps","snapshot","retrieveAllOrders","then","response","data","id","setOrderAsDelivered","render","classes","map"],"mappings":"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AAL,CAAWI,KAAX,CAAiBC,GAAvC;AAA4C,OAApE;AAAsE,MAAA,KAAK,EAAC,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAG,MAAM;AAAC,aAAKuB,mBAAL,CAAyB,KAAK5B,KAAL,CAAWI,KAAX,CAAiBC,GAA1C;AAA+C,OAAxE;AAA0E,MAAA,KAAK,EAAC,SAAhF;AAA0F,MAAA,SAAS,MAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CAzBJ,CA5CJ,CADJ,CADJ;AAuFH;;AAnMiC;;AAuMtC,eAAed,aAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Done from \"@material-ui/icons/Done\";\nimport Block from \"@material-ui/icons/Block\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\nimport CardIcon from \"../../components/Card/CardIcon.js\";\nimport CardFooter from \"../../components/Card/CardFooter.js\";\nimport \"./Dashboard-style.css\"\nimport styles from \"../../assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport {AirportShuttleTwoTone} from \"@material-ui/icons\";\nimport ManageDeliveryService from \"../../service/ManageDeliveryService\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from \"@material-ui/core/Button\";\nimport {Icon} from \"@material-ui/core\";\n\nclass DashboardPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: false,\n            orders: [],\n            order: {\n                _id: '',\n                customerName: '',\n                restaurantId:'',\n                customerId:'',\n                orderDescription:'',\n                orderNumber:'',\n                orderStatus:''\n            },\n            test:''\n        }\n        this.useStyles = this.useStyles.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.setOrderAsMissed = this.setOrderAsMissed.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshCourses();\n    }\n\n    handleClickOpen (order) {\n        this.setState(prevState => ({\n            open: !prevState.open,\n            order: {\n                _id: order._id,\n                customerName: order.customerName,\n                restaurantId: order.restaurantId,\n                customerId: order.customerId,\n                orderDescription: order.orderDescription,\n                orderNumber: order.orderNumber,\n                orderStatus: order.orderStatus\n            }\n        }));\n        console.log(order)\n        console.log(this.state.order._id)\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log(this.state.order.customerName)\n        console.log(this.state.order.restaurantId)\n        console.log(this.state.order.orderDescription)\n        console.log(this.state.order._id + \"G: \"+this.state.test)\n    }\n\n    handleClose = event => {\n        const { value, open } = event.target;\n        this.setState({\n            ...this.state,\n            open: false\n        });\n        console.log(this.state)\n        console.log(this.state.orders)\n    };\n\n    refreshCourses() {\n        ManageDeliveryService.retrieveAllOrders()\n            .then(\n                response => {\n                    console.log(response);\n                    this.setState({ orders: response.data })\n                }\n            )\n    }\n\n    setOrderAsMissed (id){\n        ManageDeliveryService.setOrderAsMissed(id).then(\n            response => {\n                console.log( \"MISSED\" + id);\n                console.log(response.data);\n                this.refreshCourses()\n            }\n        )\n        this.setState({\n            ...this.state,\n            open: false\n        });\n        console.log(\"OPEN: \"+this.state.open)\n        console.log(this.state.orders)\n    }\n\n    setOrderAsDelivered(id){\n        ManageDeliveryService.setOrderAsDelivered(id).then(\n            response => {\n                console.log( \"DELIVERED\" + id);\n                this.refreshCourses()\n            }\n        )\n        this.setState({\n            ...this.state,\n            open: false\n        });\n        console.log(\"OPEN: \"+this.state.open)\n        console.log(this.state.orders)\n    }\n\n    useStyles(){\n        makeStyles(styles);\n    }\n\n    render() {\n        const classes = this.useStyles();\n        return (\n            <div>\n                <GridContainer>\n                    {\n                        this.state.orders.map(\n                            order =>\n                                <GridItem xs={12} sm={6} md={3} key={order._id}>\n                                    <Card onClick={() => this.handleClickOpen(order)}>\n                                        <CardHeader color={\n                                            order.orderStatus === \"Ready\" ? \"warning\" :\n                                                order.orderStatus === \"Delivered\" ? \"success\" :\n                                                    order.orderStatus === \"Pending\" ? \"info\" : \"warning\"\n                                        } stats icon>\n                                            <CardIcon color={\n                                                order.orderStatus === \"Ready\" ? \"warning\" :\n                                                    order.orderStatus === \"Delivered\" ? \"success\" :\n                                                        order.orderStatus === \"Pending\" ? \"info\" :\n                                                            order.orderStatus === \"Missed\" ? \"danger\" : null\n                                            }>\n                                                {\n                                                    order.orderStatus === \"Ready\" ? <AirportShuttleTwoTone /> :\n                                                        order.orderStatus === \"Delivered\" ? <Done/> :\n                                                            order.orderStatus === \"Pending\" ? <AccessTime/> :\n                                                                order.orderStatus === \"Missed\" ? <Block/> : null\n                                                }\n                                                \n                                            </CardIcon>\n                                            <p className={\"cardCategory\"}>{order.orderDescription}</p>\n                                            <h3 className={\"cardTitle\"}>{order.customerName}</h3>\n                                            {/*<Test></Test>*/}\n                                        </CardHeader>\n                                        <CardFooter stats>\n                                            <div className={\"stats\"}>\n                                                {\n                                                    order.orderStatus === \"Ready\" ? <AirportShuttleTwoTone /> :\n                                                        order.orderStatus === \"Delivered\" ? <Done/> :\n                                                            order.orderStatus === \"Pending\" ? <AccessTime/> : <Block/>\n                                                }\n                                                {order.orderStatus}\n                                            </div>\n                                        </CardFooter>\n                                    </Card>\n                                </GridItem>\n                        )\n                    }\n\n                    <Dialog\n                        open={this.state.open}\n                        onClose={this.handleClose}\n                        aria-labelledby={this.state.order._id}\n                    >\n                        <DialogTitle>\n                            {this.state.order.customerName}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                <strong>ORDER ID: </strong> {this.state.order._id}\n                                <br/><br/>\n                                <strong>Order Number: </strong>{this.state.order.orderNumber}\n                                <br/><br/>\n                                <strong>Description: </strong> {this.state.order.orderDescription}\n                                <br/><br/>\n                                <strong>Restaurante Id: </strong>\n                                {this.state.order.restaurantId}\n                                <br/><br/>\n                                <strong>Order Status: </strong>\n                                {this.state.order.orderStatus}\n                                <br/><br/>\n                                LATER ON WE CAN PUT MORE INFO ABOUT PAYMENT, TRANSACTION, ETC\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={() => {this.setOrderAsMissed(this.state.order._id)}} color=\"primary\">\n                                Missed\n                            </Button>\n                            <Button onClick={ () => {this.setOrderAsDelivered(this.state.order._id)}} color=\"primary\" autoFocus>\n                                Delivered\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n\n                </GridContainer>\n            </div>\n        );\n    }\n\n}\n\nexport default DashboardPage\n\n\n//\n//\n// <Dialog\n// open={this.state.open}\n// onClose={this.handleClose}\n// aria-labelledby=\"id\"\n// aria-describedby=\"alert-dialog-description\"\n//     >\n//     {\n//         this.state.orders.map( order => (\n//             <DialogTitle\n//                 id = \"id\"\n//\n//             >\n//                 {order.customerName}\n//             </DialogTitle>\n//         ))\n//     }\n// <DialogContent>\n//     <DialogContentText id=\"alert-dialog-description\">\n//         Let Google  even when no apps are running.\n//     </DialogContentText>\n// </DialogContent>\n// <DialogActions>\n//     <Button onClick={this.handleClose} color=\"primary\">\n//         Disagree\n//     </Button>\n//     <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n//         Agree\n//     </Button>\n// </DialogActions>\n// </Dialog>\n\n//\n//\n\n//\n// export default function AlertDialog() {\n//     const [open, setOpen] = React.useState(false);\n//\n//     const handleClickOpen = () => {\n//         setOpen(true);\n//     };\n//\n//     const handleClose = () => {\n//         setOpen(false);\n//     };\n//\n//     return (\n//         <div>\n//             <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n//                 Open alert dialog\n//             </Button>\n//             <Dialog\n//                 open={open}\n//                 onClose={handleClose}\n//                 aria-labelledby=\"alert-dialog-title\"\n//                 aria-describedby=\"alert-dialog-description\"\n//             >\n//                 <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n//                 <DialogContent>\n//                     <DialogContentText id=\"alert-dialog-description\">\n//                         Let Google  even when no apps are running.\n//                     </DialogContentText>\n//                 </DialogContent>\n//                 <DialogActions>\n//                     <Button onClick={handleClose} color=\"primary\">\n//                         Disagree\n//                     </Button>\n//                     <Button onClick={handleClose} color=\"primary\" autoFocus>\n//                         Agree\n//                     </Button>\n//                 </DialogActions>\n//             </Dialog>\n//         </div>\n//     );\n// }\n"]},"metadata":{},"sourceType":"module"}