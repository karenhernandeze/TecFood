{"ast":null,"code":"/*!\n\n =========================================================\n * Material Dashboard React - v1.9.0 based on Material Dashboard - v1.2.0\n =========================================================\n\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\n * Copyright 2020 Creative Tim (http://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n// ##############################\n// // // Function that converts from hex color to rgb color\n// // // Example: input = #9c27b0 => output = 156, 39, 176\n// // // Example: input = 9c27b0 => output = 156, 39, 176\n// // // Example: input = #999 => output = 153, 153, 153\n// // // Example: input = 999 => output = 153, 153, 153\n// #############################\nconst hexToRgb = input => {\n  input = input + \"\";\n  input = input.replace(\"#\", \"\");\n  let hexRegex = /[0-9A-Fa-f]/g;\n\n  if (!hexRegex.test(input) || input.length !== 3 && input.length !== 6) {\n    throw new Error(\"input is not a valid hex color.\");\n  }\n\n  if (input.length === 3) {\n    let first = input[0];\n    let second = input[1];\n    let last = input[2];\n    input = first + first + second + second + last + last;\n  }\n\n  input = input.toUpperCase();\n  let first = input[0] + input[1];\n  let second = input[2] + input[3];\n  let last = input[4] + input[5];\n  return parseInt(first, 16) + \", \" + parseInt(second, 16) + \", \" + parseInt(last, 16);\n}; // ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\n\nconst drawerWidth = 260;\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\n};\nconst container = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\"\n};\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\"\n};\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\nconst grayColor = [\"#999\", \"#777\", \"#3C4858\", \"#AAAAAA\", \"#D2D2D2\", \"#DDD\", \"#b4b4b4\", \"#555555\", \"#333\", \"#a9afbb\", \"#eee\", \"#e7e7e7\"];\nconst blackColor = \"#000\";\nconst whiteColor = \"#FFF\";\nconst boxShadow = {\n  boxShadow: \"0 10px 30px -12px rgba(\" + hexToRgb(blackColor) + \", 0.42), 0 4px 25px 0px rgba(\" + hexToRgb(blackColor) + \", 0.12), 0 8px 10px -5px rgba(\" + hexToRgb(blackColor) + \", 0.2)\"\n};\nconst primaryBoxShadow = {\n  boxShadow: \"0 4px 20px 0 rgba(\" + hexToRgb(blackColor) + \",.14), 0 7px 10px -5px rgba(\" + hexToRgb(primaryColor[0]) + \",.4)\"\n};\nconst infoBoxShadow = {\n  boxShadow: \"0 4px 20px 0 rgba(\" + hexToRgb(blackColor) + \",.14), 0 7px 10px -5px rgba(\" + hexToRgb(infoColor[0]) + \",.4)\"\n};\nconst successBoxShadow = {\n  boxShadow: \"0 4px 20px 0 rgba(\" + hexToRgb(blackColor) + \",.14), 0 7px 10px -5px rgba(\" + hexToRgb(successColor[0]) + \",.4)\"\n};\nconst warningBoxShadow = {\n  boxShadow: \"0 4px 20px 0 rgba(\" + hexToRgb(blackColor) + \",.14), 0 7px 10px -5px rgba(\" + hexToRgb(warningColor[0]) + \",.4)\"\n};\nconst dangerBoxShadow = {\n  boxShadow: \"0 4px 20px 0 rgba(\" + hexToRgb(blackColor) + \",.14), 0 7px 10px -5px rgba(\" + hexToRgb(dangerColor[0]) + \",.4)\"\n};\nconst roseBoxShadow = {\n  boxShadow: \"0 4px 20px 0 rgba(\" + hexToRgb(blackColor) + \",.14), 0 7px 10px -5px rgba(\" + hexToRgb(roseColor[0]) + \",.4)\"\n};\nconst warningCardHeader = {\n  background: \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\n  ...warningBoxShadow\n};\nconst successCardHeader = {\n  background: \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\n  ...successBoxShadow\n};\nconst dangerCardHeader = {\n  background: \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\n  ...dangerBoxShadow\n};\nconst infoCardHeader = {\n  background: \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\n  ...infoBoxShadow\n};\nconst primaryCardHeader = {\n  background: \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\n  ...primaryBoxShadow\n};\nconst roseCardHeader = {\n  background: \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\n  ...roseBoxShadow\n};\nconst cardActions = {\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid \" + grayColor[10],\n  height: \"auto\",\n  ...defaultFont\n};\nconst cardHeader = {\n  margin: \"-20px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\"\n};\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n  background: whiteColor\n};\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow: \"0 10px 20px -12px rgba(\" + hexToRgb(blackColor) + \", 0.42), 0 3px 20px 0px rgba(\" + hexToRgb(blackColor) + \", 0.12), 0 8px 10px -5px rgba(\" + hexToRgb(blackColor) + \", 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\"\n};\nconst title = {\n  color: grayColor[2],\n  textDecoration: \"none\",\n  fontWeight: \"300\",\n  marginTop: \"30px\",\n  marginBottom: \"25px\",\n  minHeight: \"32px\",\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n  \"& small\": {\n    color: grayColor[1],\n    fontWeight: \"400\",\n    lineHeight: \"1\"\n  }\n};\nconst cardTitle = { ...title,\n  marginTop: \"0\",\n  marginBottom: \"3px\",\n  minHeight: \"auto\",\n  \"& a\": { ...title,\n    marginTop: \".625rem\",\n    marginBottom: \"0.75rem\",\n    minHeight: \"auto\"\n  }\n};\nconst cardSubtitle = {\n  marginTop: \"-.375rem\"\n};\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\"\n  }\n};\nexport { hexToRgb //variables\n, drawerWidth, transition, container, boxShadow, card, defaultFont, primaryColor, warningColor, dangerColor, successColor, infoColor, roseColor, grayColor, blackColor, whiteColor, primaryBoxShadow, infoBoxShadow, successBoxShadow, warningBoxShadow, dangerBoxShadow, roseBoxShadow, warningCardHeader, successCardHeader, dangerCardHeader, infoCardHeader, primaryCardHeader, roseCardHeader, cardActions, cardHeader, defaultBoxShadow, title, cardTitle, cardSubtitle, cardLink };","map":{"version":3,"sources":["/Users/karenhernandez/Desktop/WRSP-AD/tec_food_web/src/assets/jss/material-dashboard-react/material-dashboard-react.js"],"names":["hexToRgb","input","replace","hexRegex","test","length","Error","first","second","last","toUpperCase","parseInt","drawerWidth","transition","container","paddingRight","paddingLeft","marginRight","marginLeft","defaultFont","fontFamily","fontWeight","lineHeight","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","blackColor","whiteColor","boxShadow","primaryBoxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","warningCardHeader","background","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","cardActions","margin","paddingTop","borderTop","height","cardHeader","borderRadius","padding","card","display","position","width","color","defaultBoxShadow","border","title","textDecoration","marginTop","marginBottom","minHeight","cardTitle","cardSubtitle","cardLink"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,QAAQ,GAAGC,KAAK,IAAI;AACtBA,EAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;AACAA,EAAAA,KAAK,GAAGA,KAAK,CAACC,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAR;AACA,MAAIC,QAAQ,GAAG,cAAf;;AACA,MAAI,CAACA,QAAQ,CAACC,IAAT,CAAcH,KAAd,CAAD,IAA0BA,KAAK,CAACI,MAAN,KAAiB,CAAjB,IAAsBJ,KAAK,CAACI,MAAN,KAAiB,CAArE,EAAyE;AACrE,UAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,MAAIL,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB;AACpB,QAAIE,KAAK,GAAGN,KAAK,CAAC,CAAD,CAAjB;AACA,QAAIO,MAAM,GAAGP,KAAK,CAAC,CAAD,CAAlB;AACA,QAAIQ,IAAI,GAAGR,KAAK,CAAC,CAAD,CAAhB;AACAA,IAAAA,KAAK,GAAGM,KAAK,GAAGA,KAAR,GAAgBC,MAAhB,GAAyBA,MAAzB,GAAkCC,IAAlC,GAAyCA,IAAjD;AACH;;AACDR,EAAAA,KAAK,GAAGA,KAAK,CAACS,WAAN,EAAR;AACA,MAAIH,KAAK,GAAGN,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAA5B;AACA,MAAIO,MAAM,GAAGP,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAA7B;AACA,MAAIQ,IAAI,GAAGR,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAA3B;AACA,SACIU,QAAQ,CAACJ,KAAD,EAAQ,EAAR,CAAR,GACA,IADA,GAEAI,QAAQ,CAACH,MAAD,EAAS,EAAT,CAFR,GAGA,IAHA,GAIAG,QAAQ,CAACF,IAAD,EAAO,EAAP,CALZ;AAOH,CAxBD,C,CA0BA;AACA;AACA;;;AAEA,MAAMG,WAAW,GAAG,GAApB;AAEA,MAAMC,UAAU,GAAG;AACfA,EAAAA,UAAU,EAAE;AADG,CAAnB;AAIA,MAAMC,SAAS,GAAG;AACdC,EAAAA,YAAY,EAAE,MADA;AAEdC,EAAAA,WAAW,EAAE,MAFC;AAGdC,EAAAA,WAAW,EAAE,MAHC;AAIdC,EAAAA,UAAU,EAAE;AAJE,CAAlB;AAOA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,UAAU,EAAE,4CADI;AAEhBC,EAAAA,UAAU,EAAE,KAFI;AAGhBC,EAAAA,UAAU,EAAE;AAHI,CAApB;AAMA,MAAMC,YAAY,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAArB;AACA,MAAMC,YAAY,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAArB;AACA,MAAMC,WAAW,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAApB;AACA,MAAMC,YAAY,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAArB;AACA,MAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAlB;AACA,MAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAlB;AACA,MAAMC,SAAS,GAAG,CACd,MADc,EAEd,MAFc,EAGd,SAHc,EAId,SAJc,EAKd,SALc,EAMd,MANc,EAOd,SAPc,EAQd,SARc,EASd,MATc,EAUd,SAVc,EAWd,MAXc,EAYd,SAZc,CAAlB;AAcA,MAAMC,UAAU,GAAG,MAAnB;AACA,MAAMC,UAAU,GAAG,MAAnB;AAEA,MAAMC,SAAS,GAAG;AACdA,EAAAA,SAAS,EACL,4BACAhC,QAAQ,CAAC8B,UAAD,CADR,GAEA,+BAFA,GAGA9B,QAAQ,CAAC8B,UAAD,CAHR,GAIA,gCAJA,GAKA9B,QAAQ,CAAC8B,UAAD,CALR,GAMA;AARU,CAAlB;AAWA,MAAMG,gBAAgB,GAAG;AACrBD,EAAAA,SAAS,EACL,uBACAhC,QAAQ,CAAC8B,UAAD,CADR,GAEA,8BAFA,GAGA9B,QAAQ,CAACuB,YAAY,CAAC,CAAD,CAAb,CAHR,GAIA;AANiB,CAAzB;AAQA,MAAMW,aAAa,GAAG;AAClBF,EAAAA,SAAS,EACL,uBACAhC,QAAQ,CAAC8B,UAAD,CADR,GAEA,8BAFA,GAGA9B,QAAQ,CAAC2B,SAAS,CAAC,CAAD,CAAV,CAHR,GAIA;AANc,CAAtB;AAQA,MAAMQ,gBAAgB,GAAG;AACrBH,EAAAA,SAAS,EACL,uBACAhC,QAAQ,CAAC8B,UAAD,CADR,GAEA,8BAFA,GAGA9B,QAAQ,CAAC0B,YAAY,CAAC,CAAD,CAAb,CAHR,GAIA;AANiB,CAAzB;AAQA,MAAMU,gBAAgB,GAAG;AACrBJ,EAAAA,SAAS,EACL,uBACAhC,QAAQ,CAAC8B,UAAD,CADR,GAEA,8BAFA,GAGA9B,QAAQ,CAACwB,YAAY,CAAC,CAAD,CAAb,CAHR,GAIA;AANiB,CAAzB;AAQA,MAAMa,eAAe,GAAG;AACpBL,EAAAA,SAAS,EACL,uBACAhC,QAAQ,CAAC8B,UAAD,CADR,GAEA,8BAFA,GAGA9B,QAAQ,CAACyB,WAAW,CAAC,CAAD,CAAZ,CAHR,GAIA;AANgB,CAAxB;AAQA,MAAMa,aAAa,GAAG;AAClBN,EAAAA,SAAS,EACL,uBACAhC,QAAQ,CAAC8B,UAAD,CADR,GAEA,8BAFA,GAGA9B,QAAQ,CAAC4B,SAAS,CAAC,CAAD,CAAV,CAHR,GAIA;AANc,CAAtB;AASA,MAAMW,iBAAiB,GAAG;AACtBC,EAAAA,UAAU,EACN,4BAA4BhB,YAAY,CAAC,CAAD,CAAxC,GAA8C,IAA9C,GAAqDA,YAAY,CAAC,CAAD,CAAjE,GAAuE,GAFrD;AAGtB,KAAGY;AAHmB,CAA1B;AAKA,MAAMK,iBAAiB,GAAG;AACtBD,EAAAA,UAAU,EACN,4BAA4Bd,YAAY,CAAC,CAAD,CAAxC,GAA8C,IAA9C,GAAqDA,YAAY,CAAC,CAAD,CAAjE,GAAuE,GAFrD;AAGtB,KAAGS;AAHmB,CAA1B;AAKA,MAAMO,gBAAgB,GAAG;AACrBF,EAAAA,UAAU,EACN,4BAA4Bf,WAAW,CAAC,CAAD,CAAvC,GAA6C,IAA7C,GAAoDA,WAAW,CAAC,CAAD,CAA/D,GAAqE,GAFpD;AAGrB,KAAGY;AAHkB,CAAzB;AAKA,MAAMM,cAAc,GAAG;AACnBH,EAAAA,UAAU,EACN,4BAA4Bb,SAAS,CAAC,CAAD,CAArC,GAA2C,IAA3C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,GAFlD;AAGnB,KAAGO;AAHgB,CAAvB;AAKA,MAAMU,iBAAiB,GAAG;AACtBJ,EAAAA,UAAU,EACN,4BAA4BjB,YAAY,CAAC,CAAD,CAAxC,GAA8C,IAA9C,GAAqDA,YAAY,CAAC,CAAD,CAAjE,GAAuE,GAFrD;AAGtB,KAAGU;AAHmB,CAA1B;AAKA,MAAMY,cAAc,GAAG;AACnBL,EAAAA,UAAU,EACN,4BAA4BZ,SAAS,CAAC,CAAD,CAArC,GAA2C,IAA3C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,GAFlD;AAGnB,KAAGU;AAHgB,CAAvB;AAMA,MAAMQ,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE,aADQ;AAEhBC,EAAAA,UAAU,EAAE,MAFI;AAGhBC,EAAAA,SAAS,EAAE,eAAepB,SAAS,CAAC,EAAD,CAHnB;AAIhBqB,EAAAA,MAAM,EAAE,MAJQ;AAKhB,KAAG/B;AALa,CAApB;AAQA,MAAMgC,UAAU,GAAG;AACfJ,EAAAA,MAAM,EAAE,cADO;AAEfK,EAAAA,YAAY,EAAE,KAFC;AAGfC,EAAAA,OAAO,EAAE;AAHM,CAAnB;AAMA,MAAMC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE,cADA;AAETC,EAAAA,QAAQ,EAAE,UAFD;AAGTC,EAAAA,KAAK,EAAE,MAHE;AAITV,EAAAA,MAAM,EAAE,QAJC;AAKTf,EAAAA,SAAS,EAAE,sBAAsBhC,QAAQ,CAAC8B,UAAD,CAA9B,GAA6C,SAL/C;AAMTsB,EAAAA,YAAY,EAAE,KANL;AAOTM,EAAAA,KAAK,EAAE,UAAU1D,QAAQ,CAAC8B,UAAD,CAAlB,GAAiC,SAP/B;AAQTU,EAAAA,UAAU,EAAET;AARH,CAAb;AAWA,MAAM4B,gBAAgB,GAAG;AACrBC,EAAAA,MAAM,EAAE,GADa;AAErBR,EAAAA,YAAY,EAAE,KAFO;AAGrBpB,EAAAA,SAAS,EACL,4BACAhC,QAAQ,CAAC8B,UAAD,CADR,GAEA,+BAFA,GAGA9B,QAAQ,CAAC8B,UAAD,CAHR,GAIA,gCAJA,GAKA9B,QAAQ,CAAC8B,UAAD,CALR,GAMA,QAViB;AAWrBuB,EAAAA,OAAO,EAAE,QAXY;AAYrBxC,EAAAA,UAAU,EAAE;AAZS,CAAzB;AAeA,MAAMgD,KAAK,GAAG;AACVH,EAAAA,KAAK,EAAE7B,SAAS,CAAC,CAAD,CADN;AAEViC,EAAAA,cAAc,EAAE,MAFN;AAGVzC,EAAAA,UAAU,EAAE,KAHF;AAIV0C,EAAAA,SAAS,EAAE,MAJD;AAKVC,EAAAA,YAAY,EAAE,MALJ;AAMVC,EAAAA,SAAS,EAAE,MAND;AAOV7C,EAAAA,UAAU,EAAE,4CAPF;AAQV,aAAW;AACPsC,IAAAA,KAAK,EAAE7B,SAAS,CAAC,CAAD,CADT;AAEPR,IAAAA,UAAU,EAAE,KAFL;AAGPC,IAAAA,UAAU,EAAE;AAHL;AARD,CAAd;AAeA,MAAM4C,SAAS,GAAG,EACd,GAAGL,KADW;AAEdE,EAAAA,SAAS,EAAE,GAFG;AAGdC,EAAAA,YAAY,EAAE,KAHA;AAIdC,EAAAA,SAAS,EAAE,MAJG;AAKd,SAAO,EACH,GAAGJ,KADA;AAEHE,IAAAA,SAAS,EAAE,SAFR;AAGHC,IAAAA,YAAY,EAAE,SAHX;AAIHC,IAAAA,SAAS,EAAE;AAJR;AALO,CAAlB;AAaA,MAAME,YAAY,GAAG;AACjBJ,EAAAA,SAAS,EAAE;AADM,CAArB;AAIA,MAAMK,QAAQ,GAAG;AACb,mBAAiB;AACblD,IAAAA,UAAU,EAAE;AADC;AADJ,CAAjB;AAMA,SACIlB,QADJ,CAEI;AAFJ,EAGIY,WAHJ,EAIIC,UAJJ,EAKIC,SALJ,EAMIkB,SANJ,EAOIsB,IAPJ,EAQInC,WARJ,EASII,YATJ,EAUIC,YAVJ,EAWIC,WAXJ,EAYIC,YAZJ,EAaIC,SAbJ,EAcIC,SAdJ,EAeIC,SAfJ,EAgBIC,UAhBJ,EAiBIC,UAjBJ,EAkBIE,gBAlBJ,EAmBIC,aAnBJ,EAoBIC,gBApBJ,EAqBIC,gBArBJ,EAsBIC,eAtBJ,EAuBIC,aAvBJ,EAwBIC,iBAxBJ,EAyBIE,iBAzBJ,EA0BIC,gBA1BJ,EA2BIC,cA3BJ,EA4BIC,iBA5BJ,EA6BIC,cA7BJ,EA8BIC,WA9BJ,EA+BIK,UA/BJ,EAgCIQ,gBAhCJ,EAiCIE,KAjCJ,EAkCIK,SAlCJ,EAmCIC,YAnCJ,EAoCIC,QApCJ","sourcesContent":["/*!\n\n =========================================================\n * Material Dashboard React - v1.9.0 based on Material Dashboard - v1.2.0\n =========================================================\n\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\n * Copyright 2020 Creative Tim (http://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n// ##############################\n// // // Function that converts from hex color to rgb color\n// // // Example: input = #9c27b0 => output = 156, 39, 176\n// // // Example: input = 9c27b0 => output = 156, 39, 176\n// // // Example: input = #999 => output = 153, 153, 153\n// // // Example: input = 999 => output = 153, 153, 153\n// #############################\nconst hexToRgb = input => {\n    input = input + \"\";\n    input = input.replace(\"#\", \"\");\n    let hexRegex = /[0-9A-Fa-f]/g;\n    if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\n        throw new Error(\"input is not a valid hex color.\");\n    }\n    if (input.length === 3) {\n        let first = input[0];\n        let second = input[1];\n        let last = input[2];\n        input = first + first + second + second + last + last;\n    }\n    input = input.toUpperCase();\n    let first = input[0] + input[1];\n    let second = input[2] + input[3];\n    let last = input[4] + input[5];\n    return (\n        parseInt(first, 16) +\n        \", \" +\n        parseInt(second, 16) +\n        \", \" +\n        parseInt(last, 16)\n    );\n};\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260;\n\nconst transition = {\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\n};\n\nconst container = {\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    marginRight: \"auto\",\n    marginLeft: \"auto\"\n};\n\nconst defaultFont = {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: \"300\",\n    lineHeight: \"1.5em\"\n};\n\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\nconst grayColor = [\n    \"#999\",\n    \"#777\",\n    \"#3C4858\",\n    \"#AAAAAA\",\n    \"#D2D2D2\",\n    \"#DDD\",\n    \"#b4b4b4\",\n    \"#555555\",\n    \"#333\",\n    \"#a9afbb\",\n    \"#eee\",\n    \"#e7e7e7\"\n];\nconst blackColor = \"#000\";\nconst whiteColor = \"#FFF\";\n\nconst boxShadow = {\n    boxShadow:\n        \"0 10px 30px -12px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.42), 0 4px 25px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.2)\"\n};\n\nconst primaryBoxShadow = {\n    boxShadow:\n        \"0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \",.4)\"\n};\nconst infoBoxShadow = {\n    boxShadow:\n        \"0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \",.4)\"\n};\nconst successBoxShadow = {\n    boxShadow:\n        \"0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \",.4)\"\n};\nconst warningBoxShadow = {\n    boxShadow:\n        \"0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \",.4)\"\n};\nconst dangerBoxShadow = {\n    boxShadow:\n        \"0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \",.4)\"\n};\nconst roseBoxShadow = {\n    boxShadow:\n        \"0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \",.4)\"\n};\n\nconst warningCardHeader = {\n    background:\n        \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\n    ...warningBoxShadow\n};\nconst successCardHeader = {\n    background:\n        \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\n    ...successBoxShadow\n};\nconst dangerCardHeader = {\n    background:\n        \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\n    ...dangerBoxShadow\n};\nconst infoCardHeader = {\n    background:\n        \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\n    ...infoBoxShadow\n};\nconst primaryCardHeader = {\n    background:\n        \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\n    ...primaryBoxShadow\n};\nconst roseCardHeader = {\n    background:\n        \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\n    ...roseBoxShadow\n};\n\nconst cardActions = {\n    margin: \"0 20px 10px\",\n    paddingTop: \"10px\",\n    borderTop: \"1px solid \" + grayColor[10],\n    height: \"auto\",\n    ...defaultFont\n};\n\nconst cardHeader = {\n    margin: \"-20px 15px 0\",\n    borderRadius: \"3px\",\n    padding: \"15px\"\n};\n\nconst card = {\n    display: \"inline-block\",\n    position: \"relative\",\n    width: \"100%\",\n    margin: \"25px 0\",\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n    borderRadius: \"3px\",\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n    background: whiteColor\n};\n\nconst defaultBoxShadow = {\n    border: \"0\",\n    borderRadius: \"3px\",\n    boxShadow:\n        \"0 10px 20px -12px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.42), 0 3px 20px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.2)\",\n    padding: \"10px 0\",\n    transition: \"all 150ms ease 0s\"\n};\n\nconst title = {\n    color: grayColor[2],\n    textDecoration: \"none\",\n    fontWeight: \"300\",\n    marginTop: \"30px\",\n    marginBottom: \"25px\",\n    minHeight: \"32px\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    \"& small\": {\n        color: grayColor[1],\n        fontWeight: \"400\",\n        lineHeight: \"1\"\n    }\n};\n\nconst cardTitle = {\n    ...title,\n    marginTop: \"0\",\n    marginBottom: \"3px\",\n    minHeight: \"auto\",\n    \"& a\": {\n        ...title,\n        marginTop: \".625rem\",\n        marginBottom: \"0.75rem\",\n        minHeight: \"auto\"\n    }\n};\n\nconst cardSubtitle = {\n    marginTop: \"-.375rem\"\n};\n\nconst cardLink = {\n    \"& + $cardLink\": {\n        marginLeft: \"1.25rem\"\n    }\n};\n\nexport {\n    hexToRgb,\n    //variables\n    drawerWidth,\n    transition,\n    container,\n    boxShadow,\n    card,\n    defaultFont,\n    primaryColor,\n    warningColor,\n    dangerColor,\n    successColor,\n    infoColor,\n    roseColor,\n    grayColor,\n    blackColor,\n    whiteColor,\n    primaryBoxShadow,\n    infoBoxShadow,\n    successBoxShadow,\n    warningBoxShadow,\n    dangerBoxShadow,\n    roseBoxShadow,\n    warningCardHeader,\n    successCardHeader,\n    dangerCardHeader,\n    infoCardHeader,\n    primaryCardHeader,\n    roseCardHeader,\n    cardActions,\n    cardHeader,\n    defaultBoxShadow,\n    title,\n    cardTitle,\n    cardSubtitle,\n    cardLink\n};\n"]},"metadata":{},"sourceType":"module"}